<?php

/*
 * v 1.0 Первоначальный вариант реализации. На продумывание архитектуры и реализацию ушло около 2.5 часов
 * Комментарий по условию задачи:
 * 1. Приложение может рисовать круг и прямоугольник
 * 1.1. Чтобы добавить возможность рисования фигуры другого типа нужно создать файл в папке Shapes по имени нового типа.
 * Файл должен содержать одноименный класс унаследованный от Shape, в котором описаны метод обработки фигуры и свойство,
 * в котором перечислены необходимые для обработки параметры
 * 2. Приложение может рисовать в формате Image
 * 2.1. Чтобы добавить новый формат вывода нужно сделать процедуры похожие на п 1.1, только для обработчиков вывода изображения
 * 3. Все детали реализации опущены по условиям задачи.
 * 4. Код несомненно можно улучшить и сделать более качественным, но с задачей показать пример архитектуры приложения он вполне справляется
 *
 * Спасибо за внимание!
 */

spl_autoload_extensions('.class.php');
spl_autoload_register();

$shapes = [
	['type' => 'circle', 'params' => ['color' => 1, 'borderWidth' => 2, 'radius' => 15, 'height' => 10]], // height является избыточным и не будет установлен в модели
	['type' => 'rectangle', 'params' => ['color' => 2, 'borderWidth' => 3, 'width' => 30, 'height' => 10]],
];

// В задаче не указано, но допустим, что можно задать формат и какие-то доп. настройки для вывода
$output = [
	'type' => 'image', 'params' => ['type' => 'png'],
];

foreach ($shapes as $k => $shape) {
	$painter = new Painter();
	$painter->setShape($shape['type'], $shape['params'])
			->setOutputFromat($output['type'], $output['params'])
			->draw();
}	
